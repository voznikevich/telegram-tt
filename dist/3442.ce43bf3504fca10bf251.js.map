{"version":3,"file":"3442.ce43bf3504fca10bf251.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/date/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/date/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/date/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/date/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/date/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/date/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\",\"-7s\":\"kFel0ZLm\",\"7S\":\"kFel0ZLm\",\"-14s\":\"C63lwaZj\",\"14S\":\"C63lwaZj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket).concat(lockedUnselectableBucket);\n  }, [itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderChatInfo = (id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  };\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n            const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n            const renderCheckbox = () => {\n              return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n                <Checkbox\n                  label=\"\"\n                  disabled={isLocked}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={isLocked}\n                inactive={isViewOnly}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {renderChatInfo(id)}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  isUnknownUser?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  isUnknownUser,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !isUnknownUser) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        isUnknownUser={isUnknownUser}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isUnknownUser={isUnknownUser}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'isSynced'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSynced,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (isSynced && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, isSynced, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { isSynced } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      isSynced,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/date/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat && senderChat.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/date/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/date/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/date/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker.id);\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker.id);\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, userId: userId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, userId: userId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {  memo, useEffect, useMemo, useRef, useState,} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\nimport {  ALL_FOLDER_ID,  ARCHIVE_MINIMIZED_HEIGHT,  ARCHIVED_FOLDER_ID,  CHAT_HEIGHT_PX,  CHAT_LIST_SLICE,  FRESH_AUTH_PERIOD,  SAVED_FOLDER_ID,} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const [managerChatIds, setManagerChatIds] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  \n  const { openChat, openNextChat, closeForumPanel, toggleStoryRibbon } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!);\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId) || [];\n\n  useEffect(() => {\n    const managerEmail = \"voznikevicho@gmail.com\";\n    fetch(`https://m1-kwfrx.ondigitalocean.app/api/manager/${managerEmail}/chats`)\n      .then(res => res.json())\n      .then((data: string[]) => { // Визначення типу для параметра `data`\n        const existingChatIds = new Set(orderedIds);\n        const filteredChatIds = data.filter((chatId: string) => existingChatIds.has(chatId)); // Визначення типу для параметра `chatId`\n        setManagerChatIds(filteredChatIds);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Failed to fetch manager chats', error);\n        setLoading(false);\n      });\n  }, [orderedIds]);\n  \n\n  const filteredOrderedIds = useMemo(() => {\n    return orderedIds.filter(id => managerChatIds.includes(id));\n  }, [orderedIds, managerChatIds]);\n\n  console.log(filteredOrderedIds);\n  usePeerStoriesPolling(filteredOrderedIds);\n\n  const chatsHeight = (filteredOrderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(filteredOrderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, filteredOrderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  useHotkeys(isActive && filteredOrderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  useEffect(() => {\n    if (!isActive || isSaved || !filteredOrderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n        if (position > filteredOrderedIds!.length - 1) return;\n        openChat({ id: filteredOrderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, filteredOrderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    if (!viewportIds) {\n      return null; // Або якась інша логіка обробки відсутності viewportIds\n    }\n    const viewportOffset = filteredOrderedIds!.indexOf(viewportIds![0]);\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n      const isFileSticker = newAttachment && isUploadingFileSticker(newAttachment);\n\n      if (canReplace || isFileSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 40;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/date/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/date/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isChatChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","isRestricted","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","NothingFound","description","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","buildCollectionByKey","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","shouldRenderLockIcon","isLocked","renderCheckbox","ListItem","inactive","secondaryIcon","isUnselectable","country","defaultName","PrivateChatInfo","renderChatInfo","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","isSynced","userStatus","selectUserStatus","noFake","noVerified","isUnknownUser","adminMember","rightElement","loadFullUser","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","usernameList","otherUsernames","usernameLinks","s","idx","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","managerChatIds","setManagerChatIds","loading","setLoading","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","fetch","res","json","existingChatIds","filteredChatIds","catch","filteredOrderedIds","log","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","isFileSticker","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","getReactionKey","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","bySelector","selector","setter","getter","createSignal","clientsCount","useEffectOnce","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}